load("~/dev/R/nodejs/PartData.rdata")
View(PartData)
mean(PartData$q3.duration, na.rm=TRUE)
median(PartData$q3.duration, na.rm=TRUE)
median(PartData$q3.duration, na.rm=TRUE)/60
load("~/dev/R/nodejs/course.structure.rdata")
load("~/dev/R/nodejs/PartData.rdata")
View(PartData)
help.start()
ls()
setwd("~/dev/CoReaDa/R/nodejs")
load('nodejs.rdata')
load('course.structure.rdata')
nodejs[which(is.na(nodejs$part_id)),]
nodejs=nodejs[which(nodejs$type=='title-3')]
nodejs=unique(nodejs)
nodejs=unique(nodejs)
nodejs=nodejs[order(nodejs$date),]
nodejs=nodejs[order(nodejs$date),]
nodejs
load('nodejs.rdata')
nodejs$type
names(nodejs)
nodejs[which(is.na(nodejs$user_id)),]$user_id=0
nothing = min(as.character(nodejs$session_id))
nothing
nodejs=nodejs[which(!is.na(nodejs$part_id)),]
nodejs=unique(nodejs)
nodejs.structure=course.structure
names(course.structure)[1]='part_index'
part3count = nrow(nodejs.structure[which(nodejs.structure$type=='title-3'),])
nodejs.structure[which(nodejs.structure$type!='title-3'),]$part_index=0
nodejs.structure=course.structure
part3count = nrow(nodejs.structure[which(nodejs.structure$type=='title-3'),])
nodejs.structure[which(nodejs.structure$type!='title-3'),]$part_index=0
nodejs.structure[which(nodejs.structure$type=='title-3'),]$part_index=1:part3count
save(nodejs.structure, file='nodejs.structure.rdata')
parts=unique(nodejs$part_id)
nparts=length(parts)
nodejs=merge(nodejs, nodejs.structure[which(nodejs.structure$type=='title-3'),c('part_index','part_id')], by='part_id')
nodejs=nodejs[order(nodejs$date),]
rownames(nodejs)=1:nrow(nodejs)
nodejs$id=1:nrow(nodejs)
save(nodejs,file='nodejs.rdata')
nodejs$end=nodejs$date
nodejs$duration=NA
users = unique(unique(nodejs$user_id))
nusers=length(unique(nodejs$user_id))
for (i in 1:nusers)
{
time = subset(nodejs, nodejs$user_id==users[i], select=c(id,date))
l = (length(time$id))-1
if(l==0) next;
time=time[order(time$date),]
j=1
for(j in 1:l)
{
currentID =time$id[j]
nextID = time$id[j+1]
nodejs[which(nodejs$id==currentID),]$end = nodejs[which(nodejs$id==nextID),]$date
duration = as.numeric(difftime(nodejs[which(nodejs$id==currentID),]$end,nodejs[which(nodejs$id==currentID),]$date, units = "secs"))
nodejs[which(nodejs$id==currentID),]$duration = duration
print(paste(i,'- duree = ',duration) )
}
}
save(nodejs,file='nodejs.rdata')
nodejs.structure$max.duration=NA
nodejs.structure$mean.duration=NA
nodejs.structure$median.duration=NA
nodejs.structure$q1.duration=NA
nodejs.structure$q3.duration=NA
save(nodejs,file='nodejs.rdata')
nodejs_with_duration = nodejs[which(nodejs$duration>=10 & nodejs$duration<2*3600),]#;c('part_id','duration')]
parts=unique(nodejs[["part_id"]])
nparts = length(parts)
for (i in 1:nparts)
{
print(i)
part_nodejs = subset(nodejs_with_duration, nodejs_with_duration$part_id==parts[i])
part_nodejs=Peirce(part_nodejs$duration);
maxD = round(as.numeric(max(part_nodejs)  ),2);
nodejs.structure[which(nodejs.structure$part_id==parts[i]),]$max.duration=maxD
nodejs[which(nodejs$part_id==parts[i] & ( nodejs$duration==-1)),]$duration = NA
nodejs.structure[which(nodejs.structure$part_id==parts[i]),]$max.duration=round(as.numeric(quantile(part_nodejs,9/10)  ),2)
nodejs.structure[which(nodejs.structure$part_id==parts[i]),]$mean.duration=round(as.numeric(mean(part_nodejs)  ),2)
nodejs.structure[which(nodejs.structure$part_id==parts[i]),]$median.duration=round(as.numeric(median(part_nodejs)  ),2)
nodejs.structure[which(nodejs.structure$part_id==parts[i]),]$q1.duration=round(as.numeric(quantile(part_nodejs,1/4)  ),2)
nodejs.structure[which(nodejs.structure$part_id==parts[i]),]$q3.duration=round(as.numeric(quantile(part_nodejs,3/4)  ),2)
}
??Peirce
library('Peirce')
for (i in 1:nparts)
{
print(i)
part_nodejs = subset(nodejs_with_duration, nodejs_with_duration$part_id==parts[i])
part_nodejs=Peirce(part_nodejs$duration);
maxD = round(as.numeric(max(part_nodejs)  ),2);
nodejs.structure[which(nodejs.structure$part_id==parts[i]),]$max.duration=maxD
nodejs[which(nodejs$part_id==parts[i] & ( nodejs$duration==-1)),]$duration = NA
nodejs.structure[which(nodejs.structure$part_id==parts[i]),]$max.duration=round(as.numeric(quantile(part_nodejs,9/10)  ),2)
nodejs.structure[which(nodejs.structure$part_id==parts[i]),]$mean.duration=round(as.numeric(mean(part_nodejs)  ),2)
nodejs.structure[which(nodejs.structure$part_id==parts[i]),]$median.duration=round(as.numeric(median(part_nodejs)  ),2)
nodejs.structure[which(nodejs.structure$part_id==parts[i]),]$q1.duration=round(as.numeric(quantile(part_nodejs,1/4)  ),2)
nodejs.structure[which(nodejs.structure$part_id==parts[i]),]$q3.duration=round(as.numeric(quantile(part_nodejs,3/4)  ),2)
}
part_nodejs = subset(nodejs_with_duration, nodejs_with_duration$part_id==parts[i])
part_nodejs=Peirce(part_nodejs$duration);
maxD = round(as.numeric(max(part_nodejs)  ),2);
nodejs.structure[which(nodejs.structure$part_id==parts[i]),]$max.duration=maxD
maxD
maxD/60
nodejs[which(nodejs$part_id==parts[i] & ( nodejs$duration==-1)),]$duration
nodejs[which(nodejs$part_id==parts[i] & ( nodejs$duration>maxD)),]
nrow(nodejs[which(nodejs$part_id==parts[i] & ( nodejs$duration>maxD)),])
nrow(nodejs[which(nodejs$part_id==parts[i] & ( nodejs$duration<=maxD)),])
for (i in 1:nparts)
{
print(i)
part_nodejs = subset(nodejs_with_duration, nodejs_with_duration$part_id==parts[i])
part_nodejs=Peirce(part_nodejs$duration);
maxD = round(as.numeric(max(part_nodejs)  ),2);
nodejs.structure[which(nodejs.structure$part_id==parts[i]),]$max.duration=maxD
nodejs[which(nodejs$part_id==parts[i] & ( nodejs$duration>maxD)),]$duration = NA
nodejs.structure[which(nodejs.structure$part_id==parts[i]),]$max.duration=round(as.numeric(quantile(part_nodejs,9/10)  ),2)
nodejs.structure[which(nodejs.structure$part_id==parts[i]),]$mean.duration=round(as.numeric(mean(part_nodejs)  ),2)
nodejs.structure[which(nodejs.structure$part_id==parts[i]),]$median.duration=round(as.numeric(median(part_nodejs)  ),2)
nodejs.structure[which(nodejs.structure$part_id==parts[i]),]$q1.duration=round(as.numeric(quantile(part_nodejs,1/4)  ),2)
nodejs.structure[which(nodejs.structure$part_id==parts[i]),]$q3.duration=round(as.numeric(quantile(part_nodejs,3/4)  ),2)
}
save(nodejs.structure, file="nodejs.structure.rdata")
save(nodejs, file="nodejs.rdata")
nodejs$seance = 1
users = unique(nodejs$user_id)
users=sort(users)
for (i in 1:nusers)
{
print(i)
user = subset(nodejs ,nodejs$user_id==users[i],  select=c(id,part_id, date, end, duration, seance))
user=user[order(user$date),]
nums =1
user$seance=nums
nodejs$seance[which(nodejs$user_id==users[i])]=nums
l=length(user$date)-1
if(l==0) next
for(j in 1:l)
{
tDiff = as.numeric(difftime(user$end[j],user$date[j], units = "secs"))
maxD=nodejs.structure$max.duration[which(nodejs.structure$part_id==user$part_id[j])]
if(is.na(user$date[j+1])) next
if(tDiff> maxD )    nums=nums+1
else
{
sessionDiff = as.numeric(difftime(user$date[j+1],user$date[j], units = "secs"))
if((tDiff==0)&&(sessionDiff>maxD))  nums=nums+1
}
user$seance[j+1]=nums
nodejs$seance[which(nodejs$id==user$id[j+1])]=user$seance[j+1]
}
}
save(nodejs, file="nodejs.rdata")
nodejs=nodejs[order(nodejs$date),]
nodejs.Interest = data.frame(part_id=parts,  Actions_nb=0, Users_nb = 0,Sessions_nb=0, RS_nb = 0)
for(i in 1:(nparts))
{
print(i)
dataPart = nodejs[which(nodejs$part_id==parts[i]),]
nodejs.Interest[which(nodejs.Interest$part_id==parts[i]),]=c(part_id=parts[i],
Actions_nb=length(dataPart$id),
Users_nb = nusers,
Sessions_nb=length(unique(dataPart$session_id)),
RS_nb = nrow(unique(dataPart[,c("user_id","seance")])));
nodejs.Interest$part_id
}
nodejs.Interest
chapters = nodejs.structure[which(nodejs.structure$type=='title-2'),]
chapters
View(nodejs.structure)
i=1
chapters.part_id[i]
chapters$part_id[i]
chapters
children = nodejs.structure[which(nodejs.structure$parentId==chapters.part_id[i]),]
children = nodejs.structure[which(nodejs.structure$parentId==chapters$part_id[i]),]
children
nodejs.structure[which(nodejs.structure$parentId==chapters$part_id[i]),]
nodejs.structure$parentId
names(nodejs.structure)
names(nodejs.structure)[2]='parent_id'
children = nodejs.structure[which(nodejs.structure$parent_id==chapters$part_id[i]),]
children
nodejs.structure[which(nodejs.structure$parent_id==chapters$part_id[i]),]
names(nodejs.structure)[2]='part_id'
names(nodejs.structure)[3]='parent_id'
nodejs.structure[which(nodejs.structure$parent_id==chapters$part_id[i]),]
children = nodejs.structure[which(nodejs.structure$parent_id==chapters$part_id[i]),]$part_id
children
nodejs[which(nodejs$part_id %in%children),]
head(nodejs[which(nodejs$part_id %in%children),])
children
allParts=nodejs.structure$part_id
nodejs.Interest = data.frame(part_id=allParts,  Actions_nb=0, Users_nb = 0,Sessions_nb=0, RS_nb = 0)
for(i in 1:(allParts))
{
print(i)
dataPart = nodejs[which(nodejs$part_id==parts[i]),]
nodejs.Interest[which(nodejs.Interest$part_id==parts[i]),]=c(part_id=parts[i],
Actions_nb=length(dataPart$id),
Users_nb = nusers,
Sessions_nb=length(unique(dataPart$session_id)),
RS_nb = nrow(unique(dataPart[,c("user_id","seance")])));
}
nrow(allParts)
allParts
length(allParts)
allParts=nodejs.structure$part_id
nodejs.Interest = data.frame(part_id=allParts,  Actions_nb=0, Users_nb = 0,Sessions_nb=0, RS_nb = 0)
for(i in 1:(length(allParts)))
{
print(i)
dataPart = nodejs[which(nodejs$part_id==parts[i]),]
nodejs.Interest[which(nodejs.Interest$part_id==parts[i]),]=c(part_id=parts[i],
Actions_nb=length(dataPart$id),
Users_nb = nusers,
Sessions_nb=length(unique(dataPart$session_id)),
RS_nb = nrow(unique(dataPart[,c("user_id","seance")])));
}
nodejs.Interest
names(nodejs.structure)[3]='parent_id'
chapters = nodejs.structure[which(nodejs.structure$type=='title-2'),]
nchapters = length(unique(chapters))
for(i in 1:nchapters){
children = nodejs.structure[which(nodejs.structure$parent_id==chapters$part_id[i]),]$part_id
dataPart = nodejs[which(nodejs$part_id %in%children),]
nodejs.Interest[which(nodejs.Interest$part_id==chapters[i]),]=c(part_id=chapters[i],
Actions_nb=length(dataPart$id),
Users_nb = nusers,
Sessions_nb=length(unique(dataPart$session_id)),
RS_nb = nrow(unique(dataPart[,c("user_id","seance")])));
}
dataPart
for(i in 1:nchapters){
children = nodejs.structure[which(nodejs.structure$parent_id==chapters$part_id[i]),]$part_id
dataPart = nodejs[which(nodejs$part_id %in%children),]
nodejs.Interest[which(nodejs.Interest$part_id==chapters[i]),]=c(part_id=chapters$part_id[i],
Actions_nb=length(dataPart$id),
Users_nb = nusers,
Sessions_nb=length(unique(dataPart$session_id)),
RS_nb = nrow(unique(dataPart[,c("user_id","seance")])));
}
nodejs.Interest
tomes = nodejs.structure[which(nodejs.structure$type=='title-1'),]
ntomes = length(unique(tomes))
ntomes
nrow(nodejs.structure[which(nodejs.structure$type=='title-1'),])
tomes = nodejs.structure[which(nodejs.structure$type=='title-1'),]
ntomes = length(unique(tomes))
ntomes
chapters = nodejs.structure[which(nodejs.structure$type=='title-2'),]
chapters
nchapters = length(unique(chapters))
nchapters
nrow(unique(chapters))
tomes = nodejs.structure[which(nodejs.structure$type=='title-1'),]$part_id
ntomes = length(unique(tomes))
ntomes
nodejs.structure[which(nodejs.structure$parent_id==tomes[i]),]$part_id
nodejs.structure$parent_id
nodejs.structure[which(nodejs.structure$parent_id==tomes[i]),]
nodejs.structure[which(nodejs.structure$part_id==tomes[i]),]
nodejs.structure[which(nodejs.structure$part_id==tomes[i]),]
tomes = nodejs.structure[which(nodejs.structure$type=='title-1'),]$part_id
ntomes = length(unique(tomes))
i=1
nodejs.structure[which(nodejs.structure$part_id==tomes[i]),]
nodejs.structure[which(nodejs.structure$parent_id==tomes[i]),]$part_id
subchildren = nodejs.structure[which(nodejs.structure$parent_id%in%children),]$part_id
subchildren
children
children = nodejs.structure[which(nodejs.structure$parent_id==tomes[i]),]$part_id
subchildren = nodejs.structure[which(nodejs.structure$parent_id%in%children),]$part_id
subchildren
nodejs=nodejs[order(nodejs$date),]
allParts=nodejs.structure$part_id
nodejs.Interest = data.frame(part_id=allParts,  Actions_nb=0, Users_nb = 0,Sessions_nb=0, RS_nb = 0)
parts=unique(nodejs$part_id)
for(i in 1:(length(parts)))
{
print(i)
dataPart = nodejs[which(nodejs$part_id==parts[i]),]
nodejs.Interest[which(nodejs.Interest$part_id==parts[i]),]=c(part_id=parts[i],
Actions_nb=length(dataPart$id),
Users_nb = nusers,
Sessions_nb=length(unique(dataPart$session_id)),
RS_nb = nrow(unique(dataPart[,c("user_id","seance")])));
}
#Aggregate for chapters
names(nodejs.structure)[3]='parent_id'
chapters = nodejs.structure[which(nodejs.structure$type=='title-2'),]$id
nchapters = length(unique(chapters))
for(i in 1:nchapters){
children = nodejs.structure[which(nodejs.structure$parent_id==chapters[i]),]$part_id
dataPart = nodejs[which(nodejs$part_id %in%children),]
nodejs.Interest[which(nodejs.Interest$part_id==chapters[i]),]=c(part_id=chapters[i],
Actions_nb=length(dataPart$id),
Users_nb = nusers,
Sessions_nb=length(unique(dataPart$session_id)),
RS_nb = nrow(unique(dataPart[,c("user_id","seance")])));
}
#Aggregate for tomes
tomes = nodejs.structure[which(nodejs.structure$type=='title-1'),]$part_id
ntomes = length(unique(tomes))
for(i in 1:ntomes){
children = nodejs.structure[which(nodejs.structure$parent_id==tomes[i]),]$part_id
subchildren = nodejs.structure[which(nodejs.structure$parent_id%in%children),]$part_id
dataPart = nodejs[which(nodejs$part_id %in%subchildren),]
nodejs.Interest[which(nodejs.Interest$part_id==chapters[i]),]=c(part_id=chapters$part_id[i],
Actions_nb=length(dataPart$id),
Users_nb = nusers,
Sessions_nb=length(unique(dataPart$session_id)),
RS_nb = nrow(unique(dataPart[,c("user_id","seance")])));
}
chapters = nodejs.structure[which(nodejs.structure$type=='title-2'),]$id
nchapters = length(unique(chapters))
nchapters
chapters = nodejs.structure[which(nodejs.structure$type=='title-2'),]$id
chapters
nodejs.structure[which(nodejs.structure$type=='title-2'),]
chapters = nodejs.structure[which(nodejs.structure$type=='title-2'),]$part_id
nchapters = length(unique(chapters))
nchapters
nodejs=nodejs[order(nodejs$date),]
allParts=nodejs.structure$part_id
nodejs.Interest = data.frame(part_id=allParts,  Actions_nb=0, Users_nb = 0,Sessions_nb=0, RS_nb = 0)
parts=unique(nodejs$part_id)
for(i in 1:(length(parts)))
{
print(i)
dataPart = nodejs[which(nodejs$part_id==parts[i]),]
nodejs.Interest[which(nodejs.Interest$part_id==parts[i]),]=c(part_id=parts[i],
Actions_nb=length(dataPart$id),
Users_nb = nusers,
Sessions_nb=length(unique(dataPart$session_id)),
RS_nb = nrow(unique(dataPart[,c("user_id","seance")])));
}
#Aggregate for chapters
names(nodejs.structure)[3]='parent_id'
chapters = nodejs.structure[which(nodejs.structure$type=='title-2'),]$part_id
nchapters = length(unique(chapters))
for(i in 1:nchapters){
children = nodejs.structure[which(nodejs.structure$parent_id==chapters[i]),]$part_id
dataPart = nodejs[which(nodejs$part_id %in%children),]
nodejs.Interest[which(nodejs.Interest$part_id==chapters[i]),]=c(part_id=chapters[i],
Actions_nb=length(dataPart$id),
Users_nb = nusers,
Sessions_nb=length(unique(dataPart$session_id)),
RS_nb = nrow(unique(dataPart[,c("user_id","seance")])));
}
#Aggregate for tomes
tomes = nodejs.structure[which(nodejs.structure$type=='title-1'),]$part_id
ntomes = length(unique(tomes))
for(i in 1:ntomes){
children = nodejs.structure[which(nodejs.structure$parent_id==tomes[i]),]$part_id
subchildren = nodejs.structure[which(nodejs.structure$parent_id%in%children),]$part_id
dataPart = nodejs[which(nodejs$part_id %in%subchildren),]
nodejs.Interest[which(nodejs.Interest$part_id==chapters[i]),]=c(part_id=chapters$part_id[i],
Actions_nb=length(dataPart$id),
Users_nb = nusers,
Sessions_nb=length(unique(dataPart$session_id)),
RS_nb = nrow(unique(dataPart[,c("user_id","seance")])));
}
nodejs=nodejs[order(nodejs$date),]
allParts=nodejs.structure$part_id
nodejs.Interest = data.frame(part_id=allParts,  Actions_nb=0, Users_nb = 0,Sessions_nb=0, RS_nb = 0)
parts=unique(nodejs$part_id)
for(i in 1:(length(parts)))
{
print(i)
dataPart = nodejs[which(nodejs$part_id==parts[i]),]
nodejs.Interest[which(nodejs.Interest$part_id==parts[i]),]=c(part_id=parts[i],
Actions_nb=length(dataPart$id),
Users_nb = nusers,
Sessions_nb=length(unique(dataPart$session_id)),
RS_nb = nrow(unique(dataPart[,c("user_id","seance")])));
}
#Aggregate for chapters
names(nodejs.structure)[3]='parent_id'
chapters = nodejs.structure[which(nodejs.structure$type=='title-2'),]$part_id
nchapters = length(unique(chapters))
for(i in 1:nchapters){
children = nodejs.structure[which(nodejs.structure$parent_id==chapters[i]),]$part_id
dataPart = nodejs[which(nodejs$part_id %in%children),]
nodejs.Interest[which(nodejs.Interest$part_id==chapters[i]),]=c(part_id=chapters[i],
Actions_nb=length(dataPart$id),
Users_nb = nusers,
Sessions_nb=length(unique(dataPart$session_id)),
RS_nb = nrow(unique(dataPart[,c("user_id","seance")])));
}
#Aggregate for tomes
tomes = nodejs.structure[which(nodejs.structure$type=='title-1'),]$part_id
ntomes = length(unique(tomes))
for(i in 1:ntomes){
children = nodejs.structure[which(nodejs.structure$parent_id==tomes[i]),]$part_id
subchildren = nodejs.structure[which(nodejs.structure$parent_id%in%children),]$part_id
dataPart = nodejs[which(nodejs$part_id %in%subchildren),]
nodejs.Interest[which(nodejs.Interest$part_id==tomes[i]),]=c(part_id=tomes[i],
Actions_nb=length(dataPart$id),
Users_nb = nusers,
Sessions_nb=length(unique(dataPart$session_id)),
RS_nb = nrow(unique(dataPart[,c("user_id","seance")])));
}
save(nodejs.Interest, file="nodejs.Interest.rdata")
nodejs.Interest
nodejs=nodejs[order(nodejs$date),]
allParts=nodejs.structure$part_id
nodejs.Interest = data.frame(part_id=allParts,  Actions_nb=0, Users_nb = 0,Sessions_nb=0, RS_nb = 0)
parts=unique(nodejs$part_id)
for(i in 1:(length(parts)))
{
print(i)
dataPart = nodejs[which(nodejs$part_id==parts[i]),]
nodejs.Interest[which(nodejs.Interest$part_id==parts[i]),]=c(part_id=parts[i],
Actions_nb=length(dataPart$id),
Users_nb = length(unique(dataPart$user_id)),
Sessions_nb=length(unique(dataPart$session_id)),
RS_nb = nrow(unique(dataPart[,c("user_id","seance")])));
}
#Aggregate for chapters
names(nodejs.structure)[3]='parent_id'
chapters = nodejs.structure[which(nodejs.structure$type=='title-2'),]$part_id
nchapters = length(unique(chapters))
for(i in 1:nchapters){
children = nodejs.structure[which(nodejs.structure$parent_id==chapters[i]),]$part_id
dataPart = nodejs[which(nodejs$part_id %in%children),]
nodejs.Interest[which(nodejs.Interest$part_id==chapters[i]),]=c(part_id=chapters[i],
Actions_nb=length(dataPart$id),
Users_nb = length(unique(dataPart$user_id)),
Sessions_nb=length(unique(dataPart$session_id)),
RS_nb = nrow(unique(dataPart[,c("user_id","seance")])));
}
#Aggregate for tomes
tomes = nodejs.structure[which(nodejs.structure$type=='title-1'),]$part_id
ntomes = length(unique(tomes))
for(i in 1:ntomes){
children = nodejs.structure[which(nodejs.structure$parent_id==tomes[i]),]$part_id
subchildren = nodejs.structure[which(nodejs.structure$parent_id%in%children),]$part_id
dataPart = nodejs[which(nodejs$part_id %in%subchildren),]
nodejs.Interest[which(nodejs.Interest$part_id==tomes[i]),]=c(part_id=tomes[i],
Actions_nb=length(dataPart$id),
Users_nb = length(unique(dataPart$user_id)),
Sessions_nb=length(unique(dataPart$session_id)),
RS_nb = nrow(unique(dataPart[,c("user_id","seance")])));
}
save(nodejs.Interest, file="nodejs.Interest.rdata")
nodejs.Interest
courseId = nodejs.structure[which(nodejs.structure$type=='course'),]$part_id
courseId
nodejs.Interest[which(nodejs.Interest$part_id==courseId),]=c(part_id=courseId,
Actions_nb=length(nodejs$id),
Users_nb = length(unique(nodejs$user_id)),
Sessions_nb=length(unique(nodejs$session_id)),
RS_nb = nrow(unique(nodejs[,c("user_id","seance")])));
merge(nodejs.Interest, nodejs.structure[,c('part_id','type')])
nodejs.Interest = merge(nodejs.Interest, nodejs.structure[,c('part_id','type')])
save(nodejs.Interest, file="nodejs.Interest.rdata")
