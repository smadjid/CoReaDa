setwd("E:/DEV/R/nodejs")
load("E:/DEV/R/nodejs/nodejs.rdata")
achieveData = nodjs[,c(user_id,part_id)]
achieveData = nodejs[,c(user_id,part_id)]
names(nodejs)
achieveData = nodejs[,c('user_id','part_id')]
achieveData = (user_id=unique(nodejs$user_id), nb=0)
achieveData = data.frame(user_id=unique(nodejs$user_id), nb=0)
achieveData
npart=length(unique(nodejs$part_id))
nparts=length(unique(nodejs$part_id))
nparts
i=1
achieveData[1]
achieveData[,1]
options(stringsAsFactors=FALSE)
options(stringsAsFactors=FALSE)
achieveData = data.frame(user_id=unique(nodejs$user_id), nb=0)
nparts=length(unique(nodejs$part_id))
achieveData[1]
achieveData$user_id[1]
achieveData$nb[i]=nrow(nodejs[which(nodjs$user_id==achieveData$user_id[i]),])
achieveData$nb[i]=nrow(nodejs[which(nodejs$user_id==achieveData$user_id[i]),])
achieveData$nb[i]
achieveData$nb[i]=round(nrow(nodejs[which(nodejs$user_id==achieveData$user_id[i]),]) * 100/36, 1)
achieveData$nb[i]
for(i in 1:nrow(achieveData)){
achieveData$nb[i]=round(nrow(nodejs[which(nodejs$user_id==achieveData$user_id[i]),]) * 100/36, 1)
}
max(achieveData$nb)
achieveData$nb=achieveData$nb * 36/100
max(achieveData$nb)
nrow(achieveData)
for(i in 1:nrow(achieveData)){
userData = nodejs[which(nodejs$user_id==achieveData$user_id[i]),]
achieveData$nb[i]=round( length(unique(userData$part_id)) * 100/36, 1)
}
max(achieveData$nb)
setwd("E:/DEV/CoReaDa/R/nodejs")
selectedCourse='nodejs'
load('nodejs.rdata')
load(paste(selectedCourse,"rdata",sep="."))
load(paste(selectedCourse,"structure.rdata",sep="."))
load(paste(selectedCourse,"Interest.rdata",sep="."))
load(paste(selectedCourse,"Reads.rdata",sep="."))
load(paste(selectedCourse,"Ruptures.rdata",sep="."))
load(paste(selectedCourse,"RS.rdata",sep="."))
load(paste(selectedCourse,"partFollow.rdata",sep="."))
load('PartData.rdata')
View(PartData)
CourseStats = data.frame(id=0, title='title')
CourseStats$nactions =sum(Interest$Actions_nb)
load(paste(selectedCourse,"Interest.rdata",sep="."))
names(structure)[1] = 'id'
Interest = eval(parse(text = paste(selectedCourse,"Interest",sep=".")))
Reads = eval(parse(text = paste(selectedCourse,"Reads",sep=".")))
Ruptures = eval(parse(text = paste(selectedCourse,"Ruptures",sep=".")))
RS = eval(parse(text = paste(selectedCourse,"RS",sep=".")))
partFollow=eval(parse(text = paste(selectedCourse,"partFollow",sep=".")))
data = eval(parse(text = paste(selectedCourse,sep=".")))
structure = eval(parse(text = paste(selectedCourse,"structure",sep=".")))
names(structure)[1] = 'id'
Interest = eval(parse(text = paste(selectedCourse,"Interest",sep=".")))
Reads = eval(parse(text = paste(selectedCourse,"Reads",sep=".")))
Ruptures = eval(parse(text = paste(selectedCourse,"Ruptures",sep=".")))
RS = eval(parse(text = paste(selectedCourse,"RS",sep=".")))
partFollow=eval(parse(text = paste(selectedCourse,"partFollow",sep=".")))
data = eval(parse(text = paste(selectedCourse,sep=".")))
CourseStats$nusers =length(unique(data$user_id))
CourseStats$nRS = nrow(RS)
CourseStats$mean.rs.duration = mean(RS$duration,na.rm = TRUE)
CourseStats$median.rs.duration = median(RS$duration,na.rm = TRUE)
CourseStats$median.rs.nparts = median(RS$nparts,na.rm = TRUE)
CourseStats$mean.rs.nparts = mean(RS$nparts,na.rm = TRUE)
CourseStats$mean.visites = mean(Interest$Actions_nb,na.rm = TRUE)
CourseStats$median.visites = median(Interest$Actions_nb,na.rm = TRUE)
CourseStats$q1.visites = quantile(Interest$Actions_nb,0.25,na.rm = TRUE)
CourseStats$q3.visites = quantile(Interest$Actions_nb,0.75,na.rm = TRUE)
CourseStats$min.visites = quantile(Interest$Actions_nb,0.1,na.rm = TRUE)
CourseStats$max.visites = quantile(Interest$Actions_nb,0.9,na.rm = TRUE)
CourseStats$mean.part_duration = mean(structure$q3.duration,na.rm = TRUE)
CourseStats$median.part_duration = median(structure$q3.duration,na.rm = TRUE)
CourseStats$mean.readers = mean(Reads$Readers,na.rm = TRUE)
CourseStats$median.readers = median(Reads$Readers,na.rm = TRUE)
CourseStats$q1.readers = quantile(Reads$Readers,0.25,na.rm = TRUE)
CourseStats$q3.readers = quantile(Reads$Readers,0.75,na.rm = TRUE)
CourseStats$min.readers = quantile(Reads$Readers,0.1,na.rm = TRUE)
CourseStats$max.readers = quantile(Reads$Readers,0.9,na.rm = TRUE)
CourseStats$mean.rereaders = mean(Reads$Rereaders,na.rm = TRUE)
CourseStats$median.rereaders = median(Reads$Rereaders,na.rm = TRUE)
CourseStats$q1.rereaders = quantile(Reads$Rereaders,0.25,na.rm = TRUE)
CourseStats$q3.rereaders = quantile(Reads$Rereaders,0.75,na.rm = TRUE)
CourseStats$min.rereaders = quantile(Reads$Rereaders,0.1,na.rm = TRUE)
CourseStats$max.rereaders = quantile(Reads$Rereaders,0.9,na.rm = TRUE)
# rereadings
CourseStats$mean.readings = mean(Reads$Readings,na.rm = TRUE)
CourseStats$median.readings = median(Reads$Readings,na.rm = TRUE)
CourseStats$q1.readings = quantile(Reads$Readings,0.25,na.rm = TRUE)
CourseStats$q3.readings = quantile(Reads$Readings,0.75,na.rm = TRUE)
CourseStats$min.readings = quantile(Reads$Readings,0.1,na.rm = TRUE)
CourseStats$max.readings = quantile(Reads$Readings,0.9,na.rm = TRUE)
# rereadings
CourseStats$mean.rereadings = mean(Reads$Rereadings,na.rm = TRUE)
CourseStats$median.rereadings = median(Reads$Rereadings,na.rm = TRUE)
CourseStats$q1.rereadings = quantile(Reads$Rereadings,0.25,na.rm = TRUE)
CourseStats$q3.rereadings = quantile(Reads$Rereadings,0.75,na.rm = TRUE)
CourseStats$min.rereadings = quantile(Reads$Rereadings,0.1,na.rm = TRUE)
CourseStats$max.rereadings = quantile(Reads$Rereadings,0.9,na.rm = TRUE)
# sequential_rereadings
CourseStats$mean.seq_rereadings = mean(Reads$Sequential_rereadings,na.rm = TRUE)
CourseStats$median.seq_rereadings = median(Reads$Sequential_rereadings,na.rm = TRUE)
CourseStats$q1.seq_rereadings = quantile(Reads$Sequential_rereadings,0.25,na.rm = TRUE)
CourseStats$q3.seq_rereadings = quantile(Reads$Sequential_rereadings,0.75,na.rm = TRUE)
CourseStats$min.seq_rereadings = quantile(Reads$Sequential_rereadings,0.1,na.rm = TRUE)
CourseStats$max.seq_rereadings = quantile(Reads$Sequential_rereadings,0.9,na.rm = TRUE)
# decaled_rereadings
CourseStats$mean.dec_rereadings = mean(Reads$Decaled_rereadings,na.rm = TRUE)
CourseStats$median.dec_rereadings = median(Reads$Decaled_rereadings,na.rm = TRUE)
CourseStats$q1.dec_rereadings = quantile(Reads$Decaled_rereadings,0.25,na.rm = TRUE)
CourseStats$q3.dec_rereadings = quantile(Reads$Decaled_rereadings,0.75,na.rm = TRUE)
CourseStats$min.dec_rereadings = quantile(Reads$Decaled_rereadings,0.1,na.rm = TRUE)
CourseStats$max.dec_rereadings = quantile(Reads$Decaled_rereadings,0.9,na.rm = TRUE)
CourseStats = melt(CourseStats)[,c(2,3)]
library(reshape2)
CourseStats = melt(CourseStats)[,c(2,3)]
names(CourseStats)[1]='property'
CourseStats
head(CourseStats)
library('jsonlite')
CourseStats.json = toJSON(unname(split(CourseStats,1:nrow(CourseStats))))
cat(CourseStats.json, file="stats.json")
nodejs.achievement
RS
names(RS)
head(RS)
rs_stats=RS[,c('nparts','duration')]
rs_stats=RS[,c('nparts','duration')]
rs_stats = toJSON(unname(split(rs_stats,1:nrow(rs_stats))))
cat(rs_stats, file="rs.json")
