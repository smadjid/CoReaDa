load("~/dev/R/nodejs/PartData.rdata")
View(PartData)
mean(PartData$q3.duration, na.rm=TRUE)
median(PartData$q3.duration, na.rm=TRUE)
median(PartData$q3.duration, na.rm=TRUE)/60
load("~/dev/R/nodejs/course.structure.rdata")
load("~/dev/R/nodejs/PartData.rdata")
View(PartData)
help.start()
ls()
load("~/dev/CoReaDa/R/nodejs/PartData.rdata")
unique(PartData)
load("~/dev/CoReaDa/R/nodejs/nodejs.facts.rdata")
unique(facts$issueCode)
load("/home/madjid/dev/old.R/data/nodejs/nodejs.structure.rdata")
load("/home/madjid/arch-dev/Dashboard/data/nodejs/structure.rdata")
structure$part_size
getwd()
setwd('/home/madjid/dev/CoReaDa/R/nodejs')
load('PartData.rdata')
oldstructure
oldstructure=structure*
1
oldstructure=structure
names(PartData)
PartData = merge(PartData, oldstructure[,c('part_id','part_size')], all.x = TRUE)
View(PartData[,c('part_id','part_size')])
View(oldstructure)
View(PartData[,c('part_id','part_size','part_type')])
load("/home/madjid/Dropbox/Dashboard-svg/Dash/data/nodejs/Parts.rdata")
load("/home/madjid/Dropbox/Dashboard-svg/Dash/data/nodejs/Parts.rdata")
load("/home/madjid/Dropbox/Dashboard-svg/Dash/data/nodejs/structure.rdata")
load("/home/madjid/Dropbox/Trace/NodeJS/nodejs.structure.rdata")
library('JGR')
library('jgr')
install.packages(c("JGR","Deducer"))
JGR()
library('JGR')
library('Deducer')
PartData
load('PartData.rdata')
PartData[which(PartData$part_id=='1'),]
PartData$size
PartData$size=0
View(PartData[,c('part_id','part_title')])
PartData[which(PartData$part_id=='1056866'),]
PartData[which(PartData$part_id=='1056866'),]$size=112
View(PartData[,c('part_index','part_id','part_title')])
PartData[which(PartData$part_id=='1056764'),]$size=568+30
PartData[which(PartData$part_id=='1056793'),]$size=400
PartData[which(PartData$part_id=='1056865'),]$size=1150
PartData[which(PartData$part_id=='1056909'),]$size=297+3*30
PartData[which(PartData$part_id=='1056928'),]$size=267+3*30
PartData[which(PartData$part_id=='1056945'),]$size=288
PartData[which(PartData$part_id=='1056955'),]$size=207
PartData[which(PartData$part_id=='1056980'),]$size=213
PartData[which(PartData$part_id=='1057023'),]$size=915
PartData[which(PartData$part_id=='1057074'),]$size=705
PartData[which(PartData$part_id=='1057141'),]$size=918
PartData[which(PartData$part_id=='1057179'),]$size=450
PartData[which(PartData$part_id=='1057199'),]$size=225
PartData[which(PartData$part_id=='1057253'),]$size=676+30
PartData[which(PartData$part_id=='1057300'),]$size=770
PartData[which(PartData$part_id=='1057363'),]$size=936
PartData[which(PartData$part_id=='1057409'),]$size=658
PartData[which(PartData$part_id=='1057443'),]$size=653
PartData[which(PartData$part_id=='1057502'),]$size=691+30
PartData[which(PartData$part_id=='1057569'),]$size=693+30
PartData[which(PartData$part_id=='1057615'),]$size=984
PartData[which(PartData$part_id=='1057671'),]$size=685+60
PartData[which(PartData$part_id=='1057759'),]$size=1537
PartData[which(PartData$part_id=='1057824'),]$size=1490
PartData[which(PartData$part_id=='1059094'),]$size=894+60
PartData[which(PartData$part_id=='1059159'),]$size=1446
save(PartData, file='PartData.rdata')
chaptersIds = PartData[which(PartData$part_type=='chapitre'),]$part_id
chaptersIds
chaptersIds = PartData[which(PartData$part_type=='chapitre'),]$part_id
for(i in 1:length(chaptersIds)){
PartData[which(PartData$part_id==chaptersIds[i]),]$size = PartData[which(PartData$part_id==chaptersIds[i]),]$size +
sum(PartData[which(PartData$parent_id==chaptersIds[i]),]$size)
}
tomesIds = PartData[which(PartData$part_type=='partie'),]$part_id
tomesIds
for(i in 1:length(chaptersIds)){
PartData[which(PartData$part_id==chaptersIds[i]),]$size =  sum(PartData[which(PartData$parent_id==chaptersIds[i]),]$size)
}
PartData$vitesse=round(PartData$size/(PartData$mean.duration/60),2)
PartData$vitesse
View(PartData[,c('part_title','part_type','vitesse')])
save(PartData, file='PartData.rdata')
names(PartData)
ncols(PartData)
ncol(PartData)
names(PartData)[64]
names(PartData)[64]="speed"
save(PartData, file='PartData.rdata')
SpeedData = PartData[which(PartData$part_type=='section'),c('part_id','speed')]
SpeedData
byParts = SpeedData[which(SpeedData$speed>quantile(SpeedData$speed,0.90,na.rm = TRUE) ),]
byParts
median(SpeedData$speed,na.rm = TRUE)
byParts = SpeedData[which(SpeedData$speed>quantile(SpeedData$speed,0.90,na.rm = TRUE) ),]
byParts$classe="speed"
byParts$issueCode="RmaxSpeed"
byParts$content="Vitesse de lecture trop rapide"
val = round(byParts$speed / median(SpeedData$speed,na.rm = TRUE) ,0)
val
median(SpeedData$speed,na.rm = TRUE)
byParts$speed
val = round(byParts$speed / median(SpeedData$speed,na.rm = TRUE) ,2)
val
val = round(byParts$speed / median(SpeedData$speed,na.rm = TRUE) ,2)
byParts$description=paste("Cette section comporte probablement trop peu d'éléments nouveaux, intéressants : la vitesse moyenne de lecture étant",val,"fois supéreire à la vitesse moyenne de lecture des autres section")
byParts$suggestion_title="Réviser ou supprimer la section"
byParts$suggestion_content="La section doit être plus simple à lire/comprendre :
- utiliser un vocabulaire plus commun ou directement défini dans le texte,
- vérifier l'enchaînement logique des propos
- ajouter des exemples/analogies pour améliorer la compréhension
- éviter les dispersions : aller à l’essentiel"
SpeedData = PartData[which(PartData$part_type=='chapitre'),c('part_id','speed')]
SpeedData = PartData[which(PartData$part_type=='chapitre'),c('part_id','speed')]
byChaps = SpeedData[which(SpeedData$speed>quantile(SpeedData$speed,0.90,na.rm = TRUE) ),]
byChaps$classe="speed"
byChaps$issueCode="RmaxSpeed"
byChaps$content="Temps de lecture trop court"
val = round(median(SpeedData$speed,na.rm = TRUE) / byChaps$speed,2)
byChaps$description=paste("Ce chapitre  comporte probablement trop peu d'éléments nouveaux, intéressants : la vitesse moyenne de lecture étant",val,"fois supéreire à la vitesse moyenne de lecture des autres chapitres")
byChaps$suggestion_title="Réviser ou supprimer le chapitre"
byChaps$suggestion_content="Le chapitre doit être plus simple à lire/comprendre :
- utiliser un vocabulaire plus commun ou directement défini dans le texte,
- vérifier l'enchaînement logique des propos
- ajouter des exemples/analogies pour améliorer la compréhension
- éviter les dispersions : aller à l'essentiel."
maxSpeed =  rbind(byParts,byChaps)
maxSpeed
maxSpeed[c(1,2)]=
c("part_id","value")
getwd()
load("nodejs.facts.rdata")
ReadsData  = PartData[which(PartData$part_type=='section'),c('part_id','rereadings_tx')]
byParts = ReadsData[which(ReadsData$rereadings_tx>quantile(ReadsData$rereadings_tx,0.9,na.rm = TRUE)),]
byParts$classe="rereadings_tx"
byParts$issueCode="RRmax"
byParts$content="Trop de relectures"
byParts$description=paste("Cette section est  en moyenne relue",round(byParts$rereadings_tx/median(ReadsData$rereadings_tx),2),"fois plus que le nombre moyen de relecture des autres sections")
byParts$suggestion_title="Simplifier l'écriture de la section et vérifier l'enchainement"
byParts$suggestion_content="Vérifier les relectures conjointes et disjointes, si il y a globalement équilibre alors :
La section doit être plus simple à  lire et comprendre :
- utiliser un vocabulaire plus commun ou directement défini dans le texte,
- vérifier l'enchaînement logique des propos
- ajouter des exemples/analogies pour améliorer la compréhension
- éviter les dispersions : aller à l'essentiel.
Sinon, regarder l'indicateur de relecture plus spécifique (même séance ou séances disjointes) pour suggestion"
ReadsData  = PartData[which(PartData$part_type=='chapitre'),c('part_id','rereadings_tx')]
byChaps = ReadsData[which(ReadsData$rereadings_tx>quantile(ReadsData$rereadings_tx,0.9,na.rm = TRUE)),]
byChaps$classe="rereadings_tx"
byChaps$issueCode="RRmax"
byChaps$content="Trop de relectures"
byChaps$description=paste("Les sections de ce chapitre sont en moyenne relues",round(byChaps$rereadings_tx/median(ReadsData$rereadings_tx),2),"fois plus que le nombre moyen de relectures des sections des autres chapitres")
byChaps$suggestion_title="Simplifier l'écriture du chapitre et vérifier l'enchainement des sections"
byChaps$suggestion_content="Vérifier les relectures conjointes et disjointes, si il y a globalement équilibre alors :
Le chapitre et ses sections doivent être plus simples à  lire et comprendre :
- utiliser un vocabulaire plus commun ou directement défini dans le texte,
- vérifier l'enchaînement logique des propos
- ajouter des exemples/analogies pour améliorer la compréhension
- éviter les dispersions : aller à  l'essentiel.
Sinon, regarder l'indicateur de relecture plus spécifique (même séance ou séances disjointes) pour suggestion"
ReadsData = PartData[which(PartData$part_type=='partie'),c('part_id','rereadings_tx')]
byTomes = ReadsData[which(ReadsData$rereadings_tx>quantile(ReadsData$rereadings_tx,0.9,na.rm = TRUE)),]
byTomes$classe="rereadings_tx"
byTomes$issueCode="RRmax"
byTomes$content="Trop de relectures"
byTomes$description=paste("Les sections de cette partie sont en moyenne relues",round(byTomes$rereadings_tx/median(ReadsData$rereadings_tx),2),"fois plus que le nombre moyen de relectures des sections des autres parties")
byTomes$suggestion_title="Simplifier l'écriture de la partie et vérifier l'enchainement de ses chapitres"
byTomes$suggestion_content="Vérifier les relectures conjointes et disjointes, si il y a globalement équilibre alors :
La partie  et ses chapitres et sections doivent être plus simples à  lire et comprendre :
- utiliser un vocabulaire plus commun ou directement défini dans le texte,
- vérifier l'enchaînement logique des propos
- ajouter des exemples/analogies pour améliorer la compréhension
- éviter les dispersions : aller à  l'essentiel.
Sinon, regarder l'indicateur de relecture plus spécifique (même séance ou séances disjointes) pour suggestion"
maxRereadings =  rbind(byParts,byChaps,byTomes)
maxRereadings
View(maxRereadings)
StopData = PartData[which(PartData$part_type=='section'),c('part_id','norecovery_tx')]
byParts = StopData[which(StopData$norecovery_tx>quantile(StopData$norecovery_tx,0.9,na.rm = TRUE)),]
byParts$classe="norecovery_tx"
byParts$issueCode="StopRSExit"
byParts$content=paste("Trop d'arrêts définitifs de la lecture sur cette section")
byParts$description=paste(round(100*byParts$norecovery_tx,2), "% des fins définitives de la lecture  (sans reprises ultérieures) se passent sur cette section. ")
byParts$suggestion_title="Réécrire et simplifier cette section"
byParts$suggestion_content="Cette section a besoin d\'être plus simple à lire et à comprendre :
- utiliser un vocabulaire plus commun ou directement défini dans le texte,
- vérifier l'enchaînement logique des propos
- ajouter des exemples/analogies pour améliorer la compréhension
- éviter les dispersions : aller à l\'essentiel"
StopData = PartData[which(PartData$part_type=='chapitre'),c('part_id','norecovery_tx')]
byChaps = StopData[which(StopData$norecovery_tx>quantile(StopData$norecovery_tx,0.9,na.rm = TRUE)),]
byChaps$classe="norecovery_tx"
byChaps$issueCode="StopRSExit"
byChaps$content=paste("Trop d'arrêts définitifs de la lecture sur ce chapitre")
byChaps$description=paste(round(100*byChaps$norecovery_tx,2), "% des fins définitives de la lecture  (sans reprises ultérieures) se passent sur ce chapitre.")
byChaps$suggestion_title="Réécrire et simplifier ce chapitre"
byChaps$suggestion_content="Ce chapitre a besoin d\'être plus simple à lire et à comprendre :
- utiliser un vocabulaire plus commun ou directement défini dans le texte,
- vérifier l'enchaînement logique des propos
- ajouter des exemples/analogies pour améliorer la compréhension
- éviter les dispersions : aller à l\'essentiel"
StopData = PartData[which(PartData$part_type=='partie'),c('part_id','norecovery_tx')]
byTomes = StopData[which(StopData$norecovery_tx>quantile(StopData$norecovery_tx,0.9,na.rm = TRUE)),]
byTomes$classe="norecovery_tx"
byTomes$issueCode="StopRSExit"
byTomes$content=paste("Trop d'arrêts définitifs de la lecture sur cette partie")
byTomes$description=paste(round(100*byTomes$norecovery_tx), "% des fins définitives de la lecture  (sans reprises ultérieures) se passent sur cette partie.")
byTomes$suggestion_title="Réécrire et simplifier cette partie"
byTomes$suggestion_content="Cette partie a besoin d\'être plus simple à lire et à comprendre :
- utiliser un vocabulaire plus commun ou directement défini dans le texte,
- vérifier l'enchaînement logique des propos
- ajouter des exemples/analogies pour améliorer la compréhension
- éviter les dispersions : aller à l\'essentiel"
maxFinalStops =  rbind(byParts,byChaps,byTomes)
InterestData = PartData[which(PartData$part_type=='section'),]
byParts = subset(InterestData, InterestData$Actions_tx<quantile(InterestData$Actions_tx,0.10,na.rm = TRUE), select=c(part_id,Actions_tx))
byParts$classe="Actions_tx"
byParts$issueCode="RminVisit"
byParts$content="Trop peu de visites"
val = round(median(InterestData$Actions_tx,na.rm = TRUE)/ byParts$Actions_tx,1)
byParts$description=paste("Cette section est visitée", val,"fois moins que le nombre moyen de visites des autres sections")
byParts$suggestion_title="Revoir le titre et le contenu"
byParts$suggestion_content="Est-ce que le titre de la section résume bien son contenu ?
Si oui :  Est-ce que cette section est  réellement intéressante par rapport au cours ? Si c'est le cas, peut-elle
être reformulée, voire intégrée ailleurs dans le cours ?  Sinon, la supprimer et revoir le plan du chapitre et du cours.
Le cas échéant, il faudrait penser à le reformuler"
InterestData = PartData[which(PartData$part_type=='chapitre'),]
byChaps = subset(InterestData, InterestData$Actions_tx<quantile(InterestData$Actions_tx,0.10,na.rm = TRUE), select=c(part_id,Actions_tx))
byChaps$classe="Actions_tx"
byChaps$issueCode="RminVisit"
byChaps$content="Trop peu de visites"
val = round(median(InterestData$Actions_tx,na.rm = TRUE)/ byChaps$Actions_tx,1)
byChaps$description=paste("Ce chapitre section est visité", val,"fois moins que le nombre médian de visites des autres chapitres")
byChaps$suggestion_title="Revoir le titre et le contenu"
byChaps$suggestion_content="Est-ce que le titre du chapitre  résume bien son contenu ?
Si oui :  Est-ce que ce chapitre est  réellement intéressant par rapport au cours ? Si c'est le cas, peut-il
être reformulé, voire intégré ailleurs dans le cours ?  Sinon, la supprimer et revoir le plan de la partie chapitre et du cours.
Le cas échéant, il faudrait penser à le reformuler"
InterestData = PartData[which(PartData$part_type=='partie'),]
byTomes = subset(InterestData, InterestData$Actions_tx<quantile(InterestData$Actions_tx,0.10,na.rm = TRUE), select=c(part_id,Actions_tx))
byTomes$classe="Actions_tx"
byTomes$issueCode="RminVisit"
byTomes$content="Trop peu de visites"
val = round(median(InterestData$Actions_tx,na.rm = TRUE)/ byTomes$Actions_tx,1)
byTomes$description=paste("Cette partie est visitée", val,"fois moins que le nombre médian de visites des autres parties.")
byTomes$suggestion_title="Revoir le titre et le contenu"
byTomes$suggestion_content="Est-ce que le titre de la partie résume bien son contenu ?
Si oui :  Est-ce que cette partie est  réellement intéressante par rapport au cours ? Si c'est le cas, peut-elle
être reformulée, voire intégrée ailleurs dans le cours ?  Sinon, la supprimer et revoir le plan du cours.
Le cas échéant, il faudrait penser à la reformuler"
minVisits = rbind(byParts,byChaps,byTomes)
####### DUREE MIN
DurationData = PartData[which(PartData$part_type=='section'),c('part_id','mean.duration')]
byParts = DurationData[which(DurationData$mean.duration<quantile(DurationData$mean.duration,0.10,na.rm = TRUE) ),]
byParts$classe="mean.duration"
byParts$issueCode="RminDuration"
byParts$content="Temps de lecture trop court"
val = round(median(DurationData$mean.duration,na.rm = TRUE) / byParts$mean.duration,0)
byParts$description=paste("Cette section est plutôt survolée : son temps de lecture est",val,"fois inférieur au temps médian")
byParts$suggestion_title="Réviser ou supprimer la section"
byParts$suggestion_content="La section doit apporter plus d'informations nouvelles / intéressantes :
Si cette section est réellement nécessaire : peut-elle être reformulée, voire intégrée dans un autre chapitre ou une autre section du cours ?
Sinon, la supprimer et revoir le plan du chapitre et du cours."
DurationData = PartData[which(PartData$part_type=='chapitre'),c('part_id','mean.duration')]
byChaps = DurationData[which(DurationData$mean.duration<quantile(DurationData$mean.duration,0.10,na.rm = TRUE) ),]
byChaps$classe="mean.duration"
byChaps$issueCode="RminDuration"
byChaps$content="Temps de lecture trop court"
val = round(median(DurationData$mean.duration,na.rm = TRUE) / byChaps$mean.duration,0)
byChaps$description=paste("Ce chapitre est plutôt survolé : son temps de lecture est",val,"fois inférieur au temps médian")
byChaps$suggestion_title="Réviser ou supprimer le chapitre"
byChaps$suggestion_content="Le chapitre doit apporter plus d'informations nouvelles / intéressantes :
Si  le chapitre est réellement nécessaire : peut-il être reformulé, voire intégré dans un autre chapitre ou  partie du cours ?
Sinon, le supprimer et revoir le plan de la partie chapitre et du cours."
DurationData = PartData[which(PartData$part_type=='partie'),c('part_id','mean.duration')]
byTomes = DurationData[which(DurationData$mean.duration<quantile(DurationData$mean.duration,0.10,na.rm = TRUE) ),]
byTomes$classe="mean.duration"
byTomes$issueCode="RminDuration"
byTomes$content="Temps de lecture trop court"
val = round(median(DurationData$mean.duration,na.rm = TRUE) / byTomes$mean.duration,0)
byTomes$description=paste("Cette partie est plutôt survolée : son temps de lecture est",val,"fois inférieur au temps médian")
byTomes$suggestion_title="Réviser ou supprimer la partie"
byTomes$suggestion_content="La partie doit apporter plus d'informations nouvelles / intéressantes :
Si la partie est réellement nécessaire : peut-elle être reformulée, voire intégrée dans une partie du cours ?
Sinon, la supprimer et revoir le plan du cours."
minDuration =  rbind(byParts,byChaps,byTomes)
################## Vitesse MIN
SpeedData = PartData[which(PartData$part_type=='section'),c('part_id','speed')]
byParts = SpeedData[which(SpeedData$speed>quantile(SpeedData$speed,0.90,na.rm = TRUE) ),]
byParts$classe="speed"
byParts$issueCode="RmaxSpeed"
byParts$content="Vitesse de lecture trop rapide"
val = round(byParts$speed / median(SpeedData$speed,na.rm = TRUE) ,2)
byParts$description=paste("Cette section comporte probablement trop peu d'éléments nouveaux, intéressants : la vitesse moyenne de lecture étant",val,"fois supéreire à la vitesse moyenne de lecture des autres section")
byParts$suggestion_title="Réviser ou supprimer la section"
byParts$suggestion_content="La section doit être plus simple à lire/comprendre :
- utiliser un vocabulaire plus commun ou directement défini dans le texte,
- vérifier l'enchaînement logique des propos
- ajouter des exemples/analogies pour améliorer la compréhension
- éviter les dispersions : aller à l'essentiel"
SpeedData = PartData[which(PartData$part_type=='chapitre'),c('part_id','speed')]
byChaps = SpeedData[which(SpeedData$speed>quantile(SpeedData$speed,0.90,na.rm = TRUE) ),]
byChaps$classe="speed"
byChaps$issueCode="RmaxSpeed"
byChaps$content="Temps de lecture trop court"
val = round(median(SpeedData$speed,na.rm = TRUE) / byChaps$speed,2)
byChaps$description=paste("Ce chapitre  comporte probablement trop peu d'éléments nouveaux, intéressants : la vitesse moyenne de lecture étant",val,"fois supéreire à la vitesse moyenne de lecture des autres chapitres")
byChaps$suggestion_title="Réviser ou supprimer le chapitre"
byChaps$suggestion_content="Le chapitre doit être plus simple à lire/comprendre :
- utiliser un vocabulaire plus commun ou directement défini dans le texte,
- vérifier l'enchaînement logique des propos
- ajouter des exemples/analogies pour améliorer la compréhension
- éviter les dispersions : aller à l'essentiel."
maxSpeed =  rbind(byParts,byChaps)
source('~/dev/CoReaDa/R/nodejs/Fact_nodejs.r', echo=TRUE)
maxSpeed
ReadsData  = PartData[which(PartData$part_type=='section'),c('part_id','rereadings_tx')]
byParts = ReadsData[which(ReadsData$rereadings_tx>quantile(ReadsData$rereadings_tx,0.9,na.rm = TRUE)),]
byParts$classe="rereadings_tx"
byParts$issueCode="RRmax"
byParts$content="Trop de relectures"
byParts$description=paste("Cette section est  en moyenne relue",round(byParts$rereadings_tx/median(ReadsData$rereadings_tx),2),"fois plus que le nombre moyen de relecture des autres sections")
byParts$suggestion_title="Simplifier l'écriture de la section et vérifier l'enchainement"
byParts$suggestion_content="Vérifier les relectures conjointes et disjointes, si il y a globalement équilibre alors :
La section doit être plus simple à  lire et comprendre :
- utiliser un vocabulaire plus commun ou directement défini dans le texte,
- vérifier l'enchaînement logique des propos
- ajouter des exemples/analogies pour améliorer la compréhension
- éviter les dispersions : aller à l'essentiel.
Sinon, regarder l'indicateur de relecture plus spécifique (même séance ou séances disjointes) pour suggestion"
ReadsData  = PartData[which(PartData$part_type=='chapitre'),c('part_id','rereadings_tx')]
byChaps = ReadsData[which(ReadsData$rereadings_tx>quantile(ReadsData$rereadings_tx,0.9,na.rm = TRUE)),]
byChaps$classe="rereadings_tx"
byChaps$issueCode="RRmax"
byChaps$content="Trop de relectures"
byChaps$description=paste("Les sections de ce chapitre sont en moyenne relues",round(byChaps$rereadings_tx/median(ReadsData$rereadings_tx),2),"fois plus que le nombre moyen de relectures des sections des autres chapitres")
byChaps$suggestion_title="Simplifier l'écriture du chapitre et vérifier l'enchainement des sections"
byChaps$suggestion_content="Vérifier les relectures conjointes et disjointes, si il y a globalement équilibre alors :
Le chapitre et ses sections doivent être plus simples à  lire et comprendre :
- utiliser un vocabulaire plus commun ou directement défini dans le texte,
- vérifier l'enchaînement logique des propos
- ajouter des exemples/analogies pour améliorer la compréhension
- éviter les dispersions : aller à  l'essentiel.
Sinon, regarder l'indicateur de relecture plus spécifique (même séance ou séances disjointes) pour suggestion"
ReadsData = PartData[which(PartData$part_type=='partie'),c('part_id','rereadings_tx')]
byTomes = ReadsData[which(ReadsData$rereadings_tx>quantile(ReadsData$rereadings_tx,0.9,na.rm = TRUE)),]
byTomes$classe="rereadings_tx"
byTomes$issueCode="RRmax"
byTomes$content="Trop de relectures"
byTomes$description=paste("Les sections de cette partie sont en moyenne relues",round(byTomes$rereadings_tx/median(ReadsData$rereadings_tx),2),"fois plus que le nombre moyen de relectures des sections des autres parties")
byTomes$suggestion_title="Simplifier l'écriture de la partie et vérifier l'enchainement de ses chapitres"
byTomes$suggestion_content="Vérifier les relectures conjointes et disjointes, si il y a globalement équilibre alors :
La partie  et ses chapitres et sections doivent être plus simples à  lire et comprendre :
- utiliser un vocabulaire plus commun ou directement défini dans le texte,
- vérifier l'enchaînement logique des propos
- ajouter des exemples/analogies pour améliorer la compréhension
- éviter les dispersions : aller à  l'essentiel.
Sinon, regarder l'indicateur de relecture plus spécifique (même séance ou séances disjointes) pour suggestion"
maxRereadings =  rbind(byParts,byChaps,byTomes)
# arrets définitif de la lecture
StopData = PartData[which(PartData$part_type=='section'),c('part_id','norecovery_tx')]
byParts = StopData[which(StopData$norecovery_tx>quantile(StopData$norecovery_tx,0.9,na.rm = TRUE)),]
byParts$classe="norecovery_tx"
byParts$issueCode="StopRSExit"
byParts$content=paste("Trop d'arrêts définitifs de la lecture sur cette section")
byParts$description=paste(round(100*byParts$norecovery_tx,2), "% des fins définitives de la lecture  (sans reprises ultérieures) se passent sur cette section. ")
byParts$suggestion_title="Réécrire et simplifier cette section"
byParts$suggestion_content="Cette section a besoin d\'être plus simple à lire et à comprendre :
- utiliser un vocabulaire plus commun ou directement défini dans le texte,
- vérifier l'enchaînement logique des propos
- ajouter des exemples/analogies pour améliorer la compréhension
- éviter les dispersions : aller à l\'essentiel"
StopData = PartData[which(PartData$part_type=='chapitre'),c('part_id','norecovery_tx')]
byChaps = StopData[which(StopData$norecovery_tx>quantile(StopData$norecovery_tx,0.9,na.rm = TRUE)),]
byChaps$classe="norecovery_tx"
byChaps$issueCode="StopRSExit"
byChaps$content=paste("Trop d'arrêts définitifs de la lecture sur ce chapitre")
byChaps$description=paste(round(100*byChaps$norecovery_tx,2), "% des fins définitives de la lecture  (sans reprises ultérieures) se passent sur ce chapitre.")
byChaps$suggestion_title="Réécrire et simplifier ce chapitre"
byChaps$suggestion_content="Ce chapitre a besoin d\'être plus simple à lire et à comprendre :
- utiliser un vocabulaire plus commun ou directement défini dans le texte,
- vérifier l'enchaînement logique des propos
- ajouter des exemples/analogies pour améliorer la compréhension
- éviter les dispersions : aller à l\'essentiel"
StopData = PartData[which(PartData$part_type=='partie'),c('part_id','norecovery_tx')]
byTomes = StopData[which(StopData$norecovery_tx>quantile(StopData$norecovery_tx,0.9,na.rm = TRUE)),]
byTomes$classe="norecovery_tx"
byTomes$issueCode="StopRSExit"
byTomes$content=paste("Trop d'arrêts définitifs de la lecture sur cette partie")
byTomes$description=paste(round(100*byTomes$norecovery_tx), "% des fins définitives de la lecture  (sans reprises ultérieures) se passent sur cette partie.")
byTomes$suggestion_title="Réécrire et simplifier cette partie"
byTomes$suggestion_content="Cette partie a besoin d\'être plus simple à lire et à comprendre :
- utiliser un vocabulaire plus commun ou directement défini dans le texte,
- vérifier l'enchaînement logique des propos
- ajouter des exemples/analogies pour améliorer la compréhension
- éviter les dispersions : aller à l\'essentiel"
maxFinalStops =  rbind(byParts,byChaps,byTomes)
names(minVisits)[c(1,2)]=
names(minDuration)[c(1,2)]=
names(maxRereadings)[c(1,2)]=
maxSpeed[c(1,2)]=
names(maxFinalStops)[c(1,2)]=c("part_id","value")
facts =
rbind(
minVisits,
minDuration,
maxSpeed,
maxRereadings,
maxFinalStops)
maxFinalStops
maxSpeed
names(maxSpeed)[c(1,2)]
maxRereadings
names(minVisits)[c(1,2)]=
names(minDuration)[c(1,2)]=
names(maxRereadings)[c(1,2)]=
names(maxSpeed)[c(1,2)]=
names(maxFinalStops)[c(1,2)]=c("part_id","value")
facts =
rbind(
minVisits,
minDuration,
maxSpeed,
maxRereadings,
maxFinalStops)
save(facts, file="nodejs.facts.rdata")
library('jsonlite')
library('reshape')
facts.json = toJSON(unname(split(facts, 1:nrow(facts))))
cat(facts.json, file="facts.json")
save(PartData, file='PartData.rdata')
colnames(PartData)[1]="id"
colnames(PartData)[3]="parent_id"
colnames(PartData)[1]="part_id"
names(PartData)
colnames(PartData)[1]="id"
colnames(PartData)[3]="parent_id"
meltParts=melt(PartData, id.vars = 'id')
PartsData.json = toJSON(unname(split(meltParts,1:nrow(meltParts))))
cat(PartsData.json, file="structure.json")
max(PartData$speed)
max(PartData$speed, na.rm=TRUE)
maxSpeed
View(maxSpeed)
View(facts)
facts=facts[which(facts$classe!='speed'),]
View(facts)
SpeedData = PartData[which(PartData$part_type=='section'),c('part_id','speed')]
SpeedData
byParts = SpeedData[which(SpeedData$speed>quantile(SpeedData$speed,0.90,na.rm = TRUE) ),]
byParts$classe="speed"
byParts$issueCode="RmaxSpeed"
byParts$content="Vitesse de lecture trop rapide"
val = round(byParts$speed / median(SpeedData$speed,na.rm = TRUE) ,2)
byParts$description=paste("Cette section comporte probablement trop peu d'éléments nouveaux, intéressants : la vitesse moyenne de lecture étant",val,"fois supéreire à la vitesse moyenne de lecture des autres section")
byParts$suggestion_title="Réviser ou supprimer la section"
byParts$suggestion_content="La section doit être plus simple à lire/comprendre :
- utiliser un vocabulaire plus commun ou directement défini dans le texte,
- vérifier l'enchaînement logique des propos
- ajouter des exemples/analogies pour améliorer la compréhension
- éviter les dispersions : aller à l'essentiel"
SpeedData = PartData[which(PartData$part_type=='chapitre'),c('part_id','speed')]
byChaps = SpeedData[which(SpeedData$speed>quantile(SpeedData$speed,0.90,na.rm = TRUE) ),]
byChaps$classe="speed"
byChaps$issueCode="RmaxSpeed"
byChaps$content="Temps de lecture trop court"
val = round(median(SpeedData$speed,na.rm = TRUE) / byChaps$speed,2)
byChaps$description=paste("Ce chapitre  comporte probablement trop peu d'éléments nouveaux, intéressants : la vitesse moyenne de lecture étant",val,"fois supéreire à la vitesse moyenne de lecture des autres chapitres")
byChaps$suggestion_title="Réviser ou supprimer le chapitre"
byChaps$suggestion_content="Le chapitre doit être plus simple à lire/comprendre :
- utiliser un vocabulaire plus commun ou directement défini dans le texte,
- vérifier l'enchaînement logique des propos
- ajouter des exemples/analogies pour améliorer la compréhension
- éviter les dispersions : aller à l'essentiel."
maxSpeed =  rbind(byParts,byChaps)
maxSpeed
names(maxSpeed)[c(1,2)]
names(maxSpeed)[c(1,2)]=c("part_id","value")
names(maxSpeed)[c(1,2)]
facts=rbond(facts,maxSpeed)
facts=rbind(facts,maxSpeed)
View(facts)
save(facts, file="nodejs.facts.rdata")
facts.json = toJSON(unname(split(facts, 1:nrow(facts))))
cat(facts.json, file="facts.json")
